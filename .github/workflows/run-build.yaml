jobs:
    run_functional_tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up JDK 8
              uses: actions/setup-java@v4
              with:
                  distribution: "zulu"
                  java-version: "8"
            - name: run functional tests
              run: ./run-functional-tests.sh ${{matrix.setupProfile}}
            - if: ${{!cancelled()}}
              name: list everything
              run: ls *
            - if: ${{!cancelled()}}
              name: Upload test reports
              uses: actions/upload-artifact@v4
              with:
                  if-no-files-found: "warn"
                  include-hidden-files: "true"
                  name: functional-test-reports-${{matrix.setupProfile}}
                  path: |
                      playwright/playwright-report
                      playwright/test-results
            - if: ${{!cancelled()}}
              name: Upload Liferay logs
              uses: actions/upload-artifact@v4
              with:
                  if-no-files-found: "warn"
                  include-hidden-files: "true"
                  name: liferay-logs-${{matrix.setupProfile}}
                  path: |
                      ./logs/*
                      ./my-logs-dir/*
        strategy:
            matrix:
                setupProfile: [local, docker, docker-compose]
    run_integration_tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up JDK 8
              uses: actions/setup-java@v4
              with:
                  distribution: "zulu"
                  java-version: "8"
            - name: run tests
              run: ./run-tests.sh
            - if: ${{!cancelled()}}
              name: Upload test reports
              uses: actions/upload-artifact@v4
              with:
                  name: test-reports
                  path: ./**/build/reports/tests/*
on:
    pull_request:
    workflow_dispatch: